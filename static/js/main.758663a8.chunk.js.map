{"version":3,"sources":["components/Header.js","components/Encoder.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Encoder","props","state","encodeSwitch","output","error","handleChange","bind","event","value","this","btoa","target","atob","e","message","setState","class","Button","className","onClick","Form","Control","as","rows","onChange","isInvalid","Feedback","type","navigator","clipboard","writeText","readOnly","React","Component","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAaeA,MAXf,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAxC,UACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,oBACA,cAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,2B,uDCFhBC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,cAAc,EAAMC,OAAQ,GAAIC,MAAO,IACtD,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAHH,E,gDAMnB,SAAaC,GACX,IAAIC,EAAQ,GACRJ,EAAQ,GACZ,IAEII,EADEC,KAAKR,MAAMC,aACLQ,KAAKH,EAAMI,OAAOH,OAElBI,KAAKL,EAAMI,OAAOH,OAE5B,MAAMK,GACNT,EAAQS,EAAEC,QAEZL,KAAKM,SAAS,CAAEZ,OAAQK,EAAOJ,MAAOA,M,oBAGxC,WAAU,IAAD,OACP,OACE,sBAAKY,MAAM,WAAX,UACE,sBAAKA,MAAM,QAAX,UACE,sBAAKA,MAAM,mBAAX,UACE,cAACC,EAAA,EAAD,CAAQC,UAAU,OAAOzB,QAASgB,KAAKR,MAAMC,aAAe,UAAY,kBAAmBiB,QAAS,kBAAM,EAAKJ,SAAS,CAAEb,cAAc,KAAxI,oBACA,cAACe,EAAA,EAAD,CAAQC,UAAU,OAAOzB,QAAUgB,KAAKR,MAAMC,aAA2B,kBAAZ,UAA+BiB,QAAS,kBAAM,EAAKJ,SAAS,CAAEb,cAAc,KAAzI,uBAEF,cAACkB,EAAA,EAAKC,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAAGC,SAAUf,KAAKJ,aAAcoB,UAAgC,KAArBhB,KAAKR,MAAMG,QACxF,cAACgB,EAAA,EAAKC,QAAQK,SAAd,CAAuBC,KAAK,UAA5B,SACKlB,KAAKR,MAAMG,WAGlB,sBAAKY,MAAM,QAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,cAACC,EAAA,EAAD,CAAQC,UAAU,OAAOzB,QAAQ,QAAQ0B,QAAS,WAAQS,UAAUC,UAAUC,UAAU,EAAK7B,MAAME,SAAnG,oBAEF,cAACiB,EAAA,EAAKC,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAAGf,MAAOC,KAAKR,MAAME,OAAQ4B,UAAQ,c,GAvC5CC,IAAMC,WCM5BC,MAXf,WACE,OACE,wBAAQlB,MAAM,SAAd,SACE,qBAAKA,MAAM,YAAX,SACE,sBAAMA,MAAM,aAAZ,oDCYOmB,MAZf,WACE,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKF,MAAM,YAAX,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,QCCSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.758663a8.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\n\nfunction Header() {\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Base64</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nexport default class Encoder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { encodeSwitch: true, output: \"\", error: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    let value = \"\";\n    let error = \"\";\n    try {\n      if (this.state.encodeSwitch) {\n        value = btoa(event.target.value);\n      } else {\n        value = atob(event.target.value);\n      }\n    } catch(e) {\n      error = e.message;\n    }\n    this.setState({ output: value, error: error });\n  }\n\n  render() {\n    return (\n      <div class=\"row mt-4\">\n        <div class=\"col-6\">\n          <div class=\"float-right mb-2\">\n            <Button className=\"ml-1\" variant={this.state.encodeSwitch ? \"primary\" : \"outline-primary\"} onClick={() => this.setState({ encodeSwitch: true })}>Encode</Button>\n            <Button className=\"ml-1\" variant={!this.state.encodeSwitch ? \"primary\" : \"outline-primary\"} onClick={() => this.setState({ encodeSwitch: false })}>Decode</Button>\n          </div>\n          <Form.Control as=\"textarea\" rows={3} onChange={this.handleChange} isInvalid={this.state.error !== \"\"}/>\n          <Form.Control.Feedback type=\"invalid\">\n              {this.state.error}\n          </Form.Control.Feedback>\n        </div>\n        <div class=\"col-6\">\n          <div class=\"float-right mb-2\">\n            <Button className=\"ml-1\" variant=\"light\" onClick={() => { navigator.clipboard.writeText(this.state.output) }}>Copy</Button>\n          </div>\n          <Form.Control as=\"textarea\" rows={3} value={this.state.output} readOnly />\n        </div>\n      </div>\n    );\n  }\n}\n","function Footer() {\n  return (\n    <footer class=\"footer\">\n      <div class=\"container\">\n        <span class=\"text-muted\">Base64 converter on browser side.</span>\n      </div>\n\n    </footer>\n  );\n}\n\nexport default Footer;\n","import Header from './components/Header'\nimport Encoder from './components/Encoder'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div class=\"container\">\n        <Encoder />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}